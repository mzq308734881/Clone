1.“a==b”和“a.equals(b)”的比较，前者表示的是对象的比较，即看是否指向同一个对象,不是同一对象返回false;后者是对对象内容的比较，只要对象内容相同即使为不同对象比较返回值也为true.
2.对象objec1需要一个跟Object1相同的对象Object2，Object1和Object2表示两个独立的实例对象，传统的方法是直接赋值即:Object1=Object2，这时Object1和Object2指向同一个对象，并不是两个独立的对象。要得到两个相同的独立对象这时需要用的Object类的clone方法。
3.1．浅复制与深复制概念
⑴浅复制（浅克隆）
被复制对象的所有变量都含有与原来的对象相同的值，而所有的对其他对象的引用仍然指向原来的对象。换言之，浅复制仅仅复制所考虑的对象，而不

复制它所引用的对象。

⑵深复制（深克隆）
被复制对象的所有变量都含有与原来的对象相同的值，除去那些引用其他对象的变量。那些引用其他对象的变量将指向被复制过的新对象，而不再是原

有的那些被引用的对象。换言之，深复制把要复制的对象所引用的对象都复制了一遍。

3.2．Java的clone()方法
⑴clone方法将对象复制了一份并返回给调用者。一般而言，clone（）方法满足：
①对任何的对象x，都有x.clone() !=x//克隆对象与原对象不是同一个对象
②对任何的对象x，都有x.clone().getClass()= =x.getClass()//克隆对象与原对象的类型一样
③如果对象x的equals()方法定义恰当，那么x.clone().equals(x)应该成立。

⑵Java中对象的克隆
①为了获取对象的一份拷贝，我们可以利用Object类的clone()方法。 
②在派生类中覆盖基类的clone()方法，并声明为public。 
③在派生类的clone()方法中，调用super.clone()。 
④在派生类中实现Cloneable接口。